Running amr_helmholtz for DIM= 3
ilev = 0, grids = 
(( 0, 0, 0) ( 31, 31, 31) ( 0, 0, 0))[0] # (( 0, 0, 32) ( 31, 31, 63) ( 0, 0, 0))[0] # (( 0, 32, 0) ( 31, 63, 31) ( 0, 0, 0))[0] # (( 0, 32, 32) ( 31, 63, 63) ( 0, 0, 0))[0]
(( 32, 0, 0) ( 63, 31, 31) ( 0, 0, 0))[0] # (( 32, 0, 32) ( 63, 31, 63) ( 0, 0, 0))[0] # (( 32, 32, 0) ( 63, 63, 31) ( 0, 0, 0))[0] # (( 32, 32, 32) ( 63, 63, 63) ( 0, 0, 0))[0]

ilev = 1, grids = 
(( 0, 0, 0) ( 7, 7, 7) ( 0, 0, 0))[0] # 
ilev = 2, grids = 
(( 0, 0, 0) ( 7, 7, 7) ( 0, 0, 0))[0] # 
operator stencil:
Coeficients and Shifts: { 
 21139.9: ( 0, 0, 0)
-3522.56: ( 1, 0, 0)
-3522.56: (-1, 0, 0)
-3522.56: ( 0, 1, 0)
-3522.56: ( 0,-1, 0)
-3522.56: ( 0, 0, 1)
-3522.56: ( 0, 0,-1)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[(-1,-1,-1),( 1, 1, 1)]

AMRMultiGrid::solveNoInitResid: initial residual norm = 1
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 3.169657e+00, rate = 3.154915e-01
    AMRMultiGrid:: iteration = 2, residual norm = 9.545114e-01, rate = 3.320712e+00
    AMRMultiGrid:: iteration = 3, residual norm = 4.633368e-01, rate = 2.060081e+00
    AMRMultiGrid:: iteration = 4, residual norm = 1.756190e-01, rate = 2.638307e+00
    AMRMultiGrid:: iteration = 5, residual norm = 7.814255e-02, rate = 2.247418e+00
    AMRMultiGrid:: iteration = 6, residual norm = 3.542610e-02, rate = 2.205791e+00
    AMRMultiGrid:: iteration = 7, residual norm = 1.619409e-02, rate = 2.187594e+00
    AMRMultiGrid:: iteration = 8, residual norm = 7.243902e-03, rate = 2.235548e+00
    AMRMultiGrid:: iteration = 9, residual norm = 3.222112e-03, rate = 2.248185e+00
    AMRMultiGrid:: iteration = 10, residual norm = 1.418999e-03, rate = 2.270694e+00
    AMRMultiGrid:: iteration = 11, residual norm = 6.210711e-04, rate = 2.284761e+00
    AMRMultiGrid:: iteration = 12, residual norm = 2.701671e-04, rate = 2.298840e+00
    AMRMultiGrid:: iteration = 13, residual norm = 1.169535e-04, rate = 2.310039e+00
    AMRMultiGrid:: iteration = 14, residual norm = 5.040981e-05, rate = 2.320054e+00
    AMRMultiGrid:: iteration = 15, residual norm = 2.164826e-05, rate = 2.328585e+00
    AMRMultiGrid:: iteration = 16, residual norm = 9.266928e-06, rate = 2.336077e+00
    AMRMultiGrid:: iteration = 17, residual norm = 3.955821e-06, rate = 2.342605e+00
    AMRMultiGrid:: iteration = 18, residual norm = 1.684511e-06, rate = 2.348350e+00
    AMRMultiGrid:: iteration = 19, residual norm = 7.157752e-07, rate = 2.353408e+00
    AMRMultiGrid:: iteration = 20, residual norm = 3.035670e-07, rate = 2.357882e+00
    AMRMultiGrid:: iteration = 21, residual norm = 1.285294e-07, rate = 2.361848e+00
    AMRMultiGrid:: iteration = 22, residual norm = 5.433790e-08, rate = 2.365373e+00
    AMRMultiGrid:: iteration = 23, residual norm = 2.294178e-08, rate = 2.368513e+00
    AMRMultiGrid:: iteration = 24, residual norm = 9.674703e-09, rate = 2.371316e+00
    AMRMultiGrid:: iteration = 25, residual norm = 4.075582e-09, rate = 2.373821e+00
    AMRMultiGrid:: iteration = 26, residual norm = 1.715265e-09, rate = 2.376066e+00
    AMRMultiGrid:: iteration = 27, residual norm = 7.212810e-10, rate = 2.378081e+00
    AMRMultiGrid:: iteration = 28, residual norm = 3.030736e-10, rate = 2.379888e+00
    AMRMultiGrid:: iteration = 29, residual norm = 1.272609e-10, rate = 2.381514e+00
    AMRMultiGrid:: iteration = 30, residual norm = 5.340450e-11, rate = 2.382961e+00
    AMRMultiGrid:: iteration = 31, residual norm = 2.239808e-11, rate = 2.384334e+00
    AMRMultiGrid:: iteration = 32, residual norm = 9.389156e-12, rate = 2.385527e+00
    AMRMultiGrid:: iteration = 33, residual norm = 3.933964e-12, rate = 2.386691e+00
    AMRMultiGrid:: iteration = 34, residual norm = 1.646794e-12, rate = 2.388863e+00
    AMRMultiGrid:: iteration = 35, residual norm = 6.883383e-13, rate = 2.392419e+00
    AMRMultiGrid:: iteration = 35, residual norm = 6.883383e-13
    AMRMultiGrid::solveNoInitResid: final residual norm = 6.883383e-13 after 35 iterations.
WriteAMRHierarchy:  about to hopen handle for file phi.hdf5
WriteAMRHierarchy:  finished opening file phi.hdf5
peak memory usage: 8363589 bytes (7 Mb)
