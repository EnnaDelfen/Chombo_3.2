Running amr_helmholtz for DIM= 3
ilev = 0, grids = 
(( 0, 0, 0) ( 15, 15, 15) ( 0, 0, 0))[0] # (( 0, 0, 16) ( 15, 15, 31) ( 0, 0, 0))[0] # (( 0, 16, 0) ( 15, 31, 15) ( 0, 0, 0))[0] # (( 0, 16, 16) ( 15, 31, 31) ( 0, 0, 0))[0]
(( 16, 0, 0) ( 31, 15, 15) ( 0, 0, 0))[0] # (( 16, 0, 16) ( 31, 15, 31) ( 0, 0, 0))[0] # (( 16, 16, 0) ( 31, 31, 15) ( 0, 0, 0))[0] # (( 16, 16, 16) ( 31, 31, 31) ( 0, 0, 0))[0]

ilev = 1, grids = 
(( 0, 0, 0) ( 7, 7, 7) ( 0, 0, 0))[0] # 
ilev = 2, grids = 
(( 0, 0, 0) ( 7, 7, 7) ( 0, 0, 0))[0] # 
operator stencil:
Coeficients and Shifts: { 
 5288.34: ( 0, 0, 0)
 -880.64: ( 1, 0, 0)
 -880.64: (-1, 0, 0)
 -880.64: ( 0, 1, 0)
 -880.64: ( 0,-1, 0)
 -880.64: ( 0, 0, 1)
 -880.64: ( 0, 0,-1)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[(-1,-1,-1),( 1, 1, 1)]

AMRMultiGrid::solveNoInitResid: initial residual norm = 1
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 3.012145e+00, rate = 3.319893e-01
    AMRMultiGrid:: iteration = 2, residual norm = 9.125706e-01, rate = 3.300725e+00
    AMRMultiGrid:: iteration = 3, residual norm = 4.444759e-01, rate = 2.053139e+00
    AMRMultiGrid:: iteration = 4, residual norm = 1.682372e-01, rate = 2.641959e+00
    AMRMultiGrid:: iteration = 5, residual norm = 7.551687e-02, rate = 2.227810e+00
    AMRMultiGrid:: iteration = 6, residual norm = 3.420562e-02, rate = 2.207733e+00
    AMRMultiGrid:: iteration = 7, residual norm = 1.562365e-02, rate = 2.189348e+00
    AMRMultiGrid:: iteration = 8, residual norm = 6.984128e-03, rate = 2.237023e+00
    AMRMultiGrid:: iteration = 9, residual norm = 3.104611e-03, rate = 2.249599e+00
    AMRMultiGrid:: iteration = 10, residual norm = 1.366516e-03, rate = 2.271917e+00
    AMRMultiGrid:: iteration = 11, residual norm = 5.978025e-04, rate = 2.285898e+00
    AMRMultiGrid:: iteration = 12, residual norm = 2.599295e-04, rate = 2.299864e+00
    AMRMultiGrid:: iteration = 13, residual norm = 1.124757e-04, rate = 2.310984e+00
    AMRMultiGrid:: iteration = 14, residual norm = 4.846162e-05, rate = 2.320923e+00
    AMRMultiGrid:: iteration = 15, residual norm = 2.080441e-05, rate = 2.329392e+00
    AMRMultiGrid:: iteration = 16, residual norm = 8.902840e-06, rate = 2.336828e+00
    AMRMultiGrid:: iteration = 17, residual norm = 3.799260e-06, rate = 2.343309e+00
    AMRMultiGrid:: iteration = 18, residual norm = 1.617387e-06, rate = 2.349011e+00
    AMRMultiGrid:: iteration = 19, residual norm = 6.870705e-07, rate = 2.354033e+00
    AMRMultiGrid:: iteration = 20, residual norm = 2.913198e-07, rate = 2.358475e+00
    AMRMultiGrid:: iteration = 21, residual norm = 1.233146e-07, rate = 2.362412e+00
    AMRMultiGrid:: iteration = 22, residual norm = 5.212136e-08, rate = 2.365912e+00
    AMRMultiGrid:: iteration = 23, residual norm = 2.200114e-08, rate = 2.369030e+00
    AMRMultiGrid:: iteration = 24, residual norm = 9.276091e-09, rate = 2.371812e+00
    AMRMultiGrid:: iteration = 25, residual norm = 3.906874e-09, rate = 2.374300e+00
    AMRMultiGrid:: iteration = 26, residual norm = 1.643942e-09, rate = 2.376528e+00
    AMRMultiGrid:: iteration = 27, residual norm = 6.911598e-10, rate = 2.378526e+00
    AMRMultiGrid:: iteration = 28, residual norm = 2.903642e-10, rate = 2.380320e+00
    AMRMultiGrid:: iteration = 29, residual norm = 1.219027e-10, rate = 2.381934e+00
    AMRMultiGrid:: iteration = 30, residual norm = 5.114653e-11, rate = 2.383401e+00
    AMRMultiGrid:: iteration = 31, residual norm = 2.144751e-11, rate = 2.384730e+00
    AMRMultiGrid:: iteration = 32, residual norm = 8.988810e-12, rate = 2.386023e+00
    AMRMultiGrid:: iteration = 33, residual norm = 3.765432e-12, rate = 2.387192e+00
    AMRMultiGrid:: iteration = 34, residual norm = 1.577072e-12, rate = 2.387610e+00
    AMRMultiGrid:: iteration = 35, residual norm = 6.612488e-13, rate = 2.384990e+00
    AMRMultiGrid:: iteration = 35, residual norm = 6.612488e-13
    AMRMultiGrid::solveNoInitResid: final residual norm = 6.612488e-13 after 35 iterations.
WriteAMRHierarchy:  about to hopen handle for file phi.hdf5
WriteAMRHierarchy:  finished opening file phi.hdf5
peak memory usage: 1941021 bytes (1 Mb)
