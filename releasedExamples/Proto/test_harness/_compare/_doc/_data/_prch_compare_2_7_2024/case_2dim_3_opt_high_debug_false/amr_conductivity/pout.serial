Running amr_conductivity for DIM= 3
ilev = 0, grids = 
(( 0, 0, 0) ( 15, 15, 15) ( 0, 0, 0))[0] # (( 0, 0, 16) ( 15, 15, 31) ( 0, 0, 0))[0] # (( 0, 16, 0) ( 15, 31, 15) ( 0, 0, 0))[0] # (( 0, 16, 16) ( 15, 31, 31) ( 0, 0, 0))[0]
(( 16, 0, 0) ( 31, 15, 15) ( 0, 0, 0))[0] # (( 16, 0, 16) ( 31, 15, 31) ( 0, 0, 0))[0] # (( 16, 16, 0) ( 31, 31, 15) ( 0, 0, 0))[0] # (( 16, 16, 16) ( 31, 31, 31) ( 0, 0, 0))[0]

ilev = 1, grids = 
(( 0, 0, 0) ( 7, 7, 7) ( 0, 0, 0))[0] # 
ilev = 2, grids = 
(( 0, 0, 0) ( 7, 7, 7) ( 0, 0, 0))[0] # 
 after setCoarFlux: 
 m_xflux_coar->max() = 4.586 m_xflux_coar->min() = 4.586
 m_yflux_coar->max() = 4.586 m_yflux_coar->min() = 4.586
 m_zflux_coar->max() = 4.586 m_zflux_coar->min() = 4.586
 going into setFineFlux: 
 a_xflux_fine->max() = 4.586 a_xflux_fine->min() = 4.586
 a_yflux_fine->max() = 4.586 a_yflux_fine->min() = 4.586
 a_zflux_fine->max() = 4.586 a_zflux_fine->min() = 4.586
 after setFineFlux: 
 m_xflux_cofi->max() = 4.586 m_xflux_cofi->min() = 4.586
 m_yflux_cofi->max() = 4.586 m_yflux_cofi->min() = 4.586
 m_zflux_cofi->max() = 4.586 m_zflux_cofi->min() = 4.586
reflux: div_stencils[0] = 
Coeficients and Shifts: { 
      32: ( 1, 0, 0)
     -32: ( 0, 0, 0)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[( 0, 0, 0),( 1, 0, 0)]

reflux: div_stencils[1] = 
Coeficients and Shifts: { 
      32: ( 0, 1, 0)
     -32: ( 0, 0, 0)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[( 0, 0, 0),( 0, 1, 0)]

reflux: div_stencils[2] = 
Coeficients and Shifts: { 
      32: ( 0, 0, 1)
     -32: ( 0, 0, 0)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[( 0, 0, 0),( 0, 0, 1)]

reflux: After stage 1 (coarse flux only): 
 max_x = 4.586, min_x = 4.586
 max_y = 4.586, min_y = 4.586
 max_z = 4.586, min_z = 4.586
reflux: After stage 2 (composite coar/cofi): 
 max_x = 4.586, min_x = 4.586
 max_y = 4.586, min_y = 4.586
 max_z = 4.586, min_z = 4.586
reflux stage 3: reflux divergence and increment: 
 reflux: Buffers should hold composite coar/cofi flux: 
 buff_x.max() = 4.586, buff_x.min() = 4.586
 buff_y.max() = 4.586, buff_y.min() = 4.586
 buff_z.max() = 4.586, buff_z.min() = 4.586
 flux_x.max() = 4.586, flux_x.min() = 4.586
 flux_y.max() = 4.586, flux_y.min() = 4.586
 flux_z.max() = 4.586, flux_z.min() = 4.586
 reflux: Buffers should hold Fdiff = Fcomposite - Fcoar (zero where they match): 
 buff_x.max() = 2.22507e-308, buff_x.min() = 0
 buff_y.max() = 2.22507e-308, buff_y.min() = 0
 buff_z.max() = 2.22507e-308, buff_z.min() = 0
reflux going into component loop: 
 valid =   [( 0, 0, 0),( 15, 15, 15)]
 reflux: big incr bit: 
 div_incr_x.max() = 2.22507e-308 div_incr_x.min() = 0
 div_incr_y.max() = 2.22507e-308 div_incr_y.min() = 0
 div_incr_z.max() = 2.22507e-308 div_incr_z.min() = 0
 divergence.max() = 2.22507e-308 divergence.min() = 0
 after setCoarFlux: 
 m_xflux_coar->max() = 4.586 m_xflux_coar->min() = 4.586
 m_yflux_coar->max() = 4.586 m_yflux_coar->min() = 4.586
 m_zflux_coar->max() = 4.586 m_zflux_coar->min() = 4.586
 going into setFineFlux: 
 a_xflux_fine->max() = 4.586 a_xflux_fine->min() = 4.586
 a_yflux_fine->max() = 4.586 a_yflux_fine->min() = 4.586
 a_zflux_fine->max() = 4.586 a_zflux_fine->min() = 4.586
 after setFineFlux: 
 m_xflux_cofi->max() = 4.586 m_xflux_cofi->min() = 4.586
 m_yflux_cofi->max() = 4.586 m_yflux_cofi->min() = 4.586
 m_zflux_cofi->max() = 4.586 m_zflux_cofi->min() = 4.586
reflux: div_stencils[0] = 
Coeficients and Shifts: { 
      64: ( 1, 0, 0)
     -64: ( 0, 0, 0)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[( 0, 0, 0),( 1, 0, 0)]

reflux: div_stencils[1] = 
Coeficients and Shifts: { 
      64: ( 0, 1, 0)
     -64: ( 0, 0, 0)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[( 0, 0, 0),( 0, 1, 0)]

reflux: div_stencils[2] = 
Coeficients and Shifts: { 
      64: ( 0, 0, 1)
     -64: ( 0, 0, 0)
}
srcRefratio:	( 1, 1, 1)
destRefratio:	( 1, 1, 1)
destShift:	( 0, 0, 0)
span:		[( 0, 0, 0),( 0, 0, 1)]

reflux: After stage 1 (coarse flux only): 
 max_x = 4.586, min_x = 4.586
 max_y = 4.586, min_y = 4.586
 max_z = 4.586, min_z = 4.586
reflux: After stage 2 (composite coar/cofi): 
 max_x = 4.586, min_x = 4.586
 max_y = 4.586, min_y = 4.586
 max_z = 4.586, min_z = 4.586
reflux stage 3: reflux divergence and increment: 
 reflux: Buffers should hold composite coar/cofi flux: 
 buff_x.max() = 4.586, buff_x.min() = 4.586
 buff_y.max() = 4.586, buff_y.min() = 4.586
 buff_z.max() = 4.586, buff_z.min() = 4.586
 flux_x.max() = 4.586, flux_x.min() = 4.586
 flux_y.max() = 4.586, flux_y.min() = 4.586
 flux_z.max() = 4.586, flux_z.min() = 4.586
 reflux: Buffers should hold Fdiff = Fcomposite - Fcoar (zero where they match): 
 buff_x.max() = 2.22507e-308, buff_x.min() = 0
 buff_y.max() = 2.22507e-308, buff_y.min() = 0
 buff_z.max() = 2.22507e-308, buff_z.min() = 0
reflux going into component loop: 
 valid =   [( 0, 0, 0),( 7, 7, 7)]
 reflux: big incr bit: 
 div_incr_x.max() = 2.22507e-308 div_incr_x.min() = 0
 div_incr_y.max() = 2.22507e-308 div_incr_y.min() = 0
 div_incr_z.max() = 2.22507e-308 div_incr_z.min() = 0
 divergence.max() = 2.22507e-308 divergence.min() = 0
solveForPhi: testFluxRegister passed
AMRMultiGrid::solveNoInitResid: initial residual norm = 275803
    AMRMultiGrid:: iteration = 0, residual norm = 2.758031e+05
    AMRMultiGrid:: iteration = 1, residual norm = 1.440139e+05, rate = 1.915114e+00
    AMRMultiGrid:: iteration = 2, residual norm = 6.530247e+04, rate = 2.205336e+00
    AMRMultiGrid:: iteration = 3, residual norm = 2.977269e+04, rate = 2.193368e+00
    AMRMultiGrid:: iteration = 4, residual norm = 1.336552e+04, rate = 2.227574e+00
    AMRMultiGrid:: iteration = 5, residual norm = 5.939894e+03, rate = 2.250128e+00
    AMRMultiGrid:: iteration = 6, residual norm = 2.616090e+03, rate = 2.270524e+00
    AMRMultiGrid:: iteration = 7, residual norm = 1.143748e+03, rate = 2.287295e+00
    AMRMultiGrid:: iteration = 8, residual norm = 4.969240e+02, rate = 2.301656e+00
    AMRMultiGrid:: iteration = 9, residual norm = 2.147746e+02, rate = 2.313700e+00
    AMRMultiGrid:: iteration = 10, residual norm = 9.241648e+01, rate = 2.323986e+00
    AMRMultiGrid:: iteration = 11, residual norm = 3.961710e+01, rate = 2.332742e+00
    AMRMultiGrid:: iteration = 12, residual norm = 1.692845e+01, rate = 2.340268e+00
    AMRMultiGrid:: iteration = 13, residual norm = 7.213559e+00, rate = 2.346754e+00
    AMRMultiGrid:: iteration = 14, residual norm = 3.066496e+00, rate = 2.352378e+00
    AMRMultiGrid:: iteration = 15, residual norm = 1.300865e+00, rate = 2.357275e+00
    AMRMultiGrid:: iteration = 16, residual norm = 5.508503e-01, rate = 2.361558e+00
    AMRMultiGrid:: iteration = 17, residual norm = 2.328864e-01, rate = 2.365318e+00
    AMRMultiGrid:: iteration = 18, residual norm = 9.832110e-02, rate = 2.368631e+00
    AMRMultiGrid:: iteration = 19, residual norm = 4.145842e-02, rate = 2.371559e+00
    AMRMultiGrid:: iteration = 20, residual norm = 1.746239e-02, rate = 2.374155e+00
    AMRMultiGrid:: iteration = 21, residual norm = 7.348063e-03, rate = 2.376462e+00
    AMRMultiGrid:: iteration = 22, residual norm = 3.089346e-03, rate = 2.378517e+00
    AMRMultiGrid:: iteration = 23, residual norm = 1.297853e-03, rate = 2.380352e+00
    AMRMultiGrid:: iteration = 24, residual norm = 5.448602e-04, rate = 2.381992e+00
    AMRMultiGrid:: iteration = 25, residual norm = 2.286004e-04, rate = 2.383462e+00
    AMRMultiGrid:: iteration = 26, residual norm = 9.585804e-05, rate = 2.384780e+00
    AMRMultiGrid:: iteration = 27, residual norm = 4.017580e-05, rate = 2.385965e+00
    AMRMultiGrid:: iteration = 28, residual norm = 1.683087e-05, rate = 2.387030e+00
    AMRMultiGrid:: iteration = 29, residual norm = 7.048138e-06, rate = 2.387989e+00
    AMRMultiGrid:: iteration = 30, residual norm = 2.950428e-06, rate = 2.388853e+00
    AMRMultiGrid:: iteration = 31, residual norm = 1.234678e-06, rate = 2.389633e+00
    AMRMultiGrid:: iteration = 32, residual norm = 5.165295e-07, rate = 2.390335e+00
    AMRMultiGrid:: iteration = 33, residual norm = 2.160337e-07, rate = 2.390967e+00
    AMRMultiGrid:: iteration = 33, residual norm = 2.160337e-07
    AMRMultiGrid::solveNoInitResid: final residual norm = 2.160337e-07 after 33 iterations.
WriteAMRHierarchy:  about to hopen handle for file phi.hdf5
WriteAMRHierarchy:  finished opening file phi.hdf5
peak memory usage: 3084441 bytes (2 Mb)
