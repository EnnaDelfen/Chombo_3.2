mpi_tutorial: world rank = 2
mpi_tutorial: world size = 4
mpi_tutorial: row   rank = 2
mpi_tutorial: row   size = 4
chomboCommSplit: world rank = 2
chomboCommSplit: world size = 4
chomboCommSplit: color rank = 2
chomboCommSplit: color size = 4
chomboCommSplit: proc color = 0
runColoredSolvers:nx         =64
runColoredSolvers:maxBoxSize =32
runColoredSolvers:numColors  =4
runColoredSolvers: running on standard
runSolver: making vector structures
runSolver: defining the solver 
runSolver: allocate solution and RHS
runSolver: setting the rhs
runSolver: running amrmultigrid::solve
AMRMultiGrid::solve: calling init
AMRMultiGrid::solve: calling solveNoInit
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 2.462298e-01, rate = 4.061248e+00
    AMRMultiGrid:: iteration = 2, residual norm = 8.359399e-03, rate = 2.945544e+01
    AMRMultiGrid:: iteration = 3, residual norm = 1.360015e-04, rate = 6.146551e+01
    AMRMultiGrid:: iteration = 4, residual norm = 1.123544e-06, rate = 1.210468e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09, rate = 1.193737e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09
    AMRMultiGrid:: exitStatus = 1
AMRMultiGrid::solve: calling revert
AMRMultiGrid::solve: leaving
runSolver: clean up 
runColoredSolvers: world rank = 2
runColoredSolvers: world size = 4
runColoredSolvers: color rank = 2
runColoredSolvers: color size = 4
runColoredSolvers: proc color = 0
runColoredSolvers: running world solver Ncolor times
isolve = 0
runSolver: making vector structures
runSolver: defining the solver 
runSolver: allocate solution and RHS
runSolver: setting the rhs
runSolver: running amrmultigrid::solve
AMRMultiGrid::solve: calling init
AMRMultiGrid::solve: calling solveNoInit
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 2.462298e-01, rate = 4.061248e+00
    AMRMultiGrid:: iteration = 2, residual norm = 8.359399e-03, rate = 2.945544e+01
    AMRMultiGrid:: iteration = 3, residual norm = 1.360015e-04, rate = 6.146551e+01
    AMRMultiGrid:: iteration = 4, residual norm = 1.123544e-06, rate = 1.210468e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09, rate = 1.193737e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09
    AMRMultiGrid:: exitStatus = 1
AMRMultiGrid::solve: calling revert
AMRMultiGrid::solve: leaving
runSolver: clean up 
isolve = 1
runSolver: making vector structures
runSolver: defining the solver 
runSolver: allocate solution and RHS
runSolver: setting the rhs
runSolver: running amrmultigrid::solve
AMRMultiGrid::solve: calling init
AMRMultiGrid::solve: calling solveNoInit
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 2.462298e-01, rate = 4.061248e+00
    AMRMultiGrid:: iteration = 2, residual norm = 8.359399e-03, rate = 2.945544e+01
    AMRMultiGrid:: iteration = 3, residual norm = 1.360015e-04, rate = 6.146551e+01
    AMRMultiGrid:: iteration = 4, residual norm = 1.123544e-06, rate = 1.210468e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09, rate = 1.193737e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09
    AMRMultiGrid:: exitStatus = 1
AMRMultiGrid::solve: calling revert
AMRMultiGrid::solve: leaving
runSolver: clean up 
isolve = 2
runSolver: making vector structures
runSolver: defining the solver 
runSolver: allocate solution and RHS
runSolver: setting the rhs
runSolver: running amrmultigrid::solve
AMRMultiGrid::solve: calling init
AMRMultiGrid::solve: calling solveNoInit
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 2.462298e-01, rate = 4.061248e+00
    AMRMultiGrid:: iteration = 2, residual norm = 8.359399e-03, rate = 2.945544e+01
    AMRMultiGrid:: iteration = 3, residual norm = 1.360015e-04, rate = 6.146551e+01
    AMRMultiGrid:: iteration = 4, residual norm = 1.123544e-06, rate = 1.210468e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09, rate = 1.193737e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09
    AMRMultiGrid:: exitStatus = 1
AMRMultiGrid::solve: calling revert
AMRMultiGrid::solve: leaving
runSolver: clean up 
isolve = 3
runSolver: making vector structures
runSolver: defining the solver 
runSolver: allocate solution and RHS
runSolver: setting the rhs
runSolver: running amrmultigrid::solve
AMRMultiGrid::solve: calling init
AMRMultiGrid::solve: calling solveNoInit
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 2.462298e-01, rate = 4.061248e+00
    AMRMultiGrid:: iteration = 2, residual norm = 8.359399e-03, rate = 2.945544e+01
    AMRMultiGrid:: iteration = 3, residual norm = 1.360015e-04, rate = 6.146551e+01
    AMRMultiGrid:: iteration = 4, residual norm = 1.123544e-06, rate = 1.210468e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09, rate = 1.193737e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09
    AMRMultiGrid:: exitStatus = 1
AMRMultiGrid::solve: calling revert
AMRMultiGrid::solve: leaving
runSolver: clean up 
runColoredSolvers: running colored solvers
runSolver: making vector structures
runSolver: defining the solver 
runSolver: allocate solution and RHS
runSolver: setting the rhs
runSolver: running amrmultigrid::solve
AMRMultiGrid::solve: calling init
AMRMultiGrid::solve: calling solveNoInit
    AMRMultiGrid:: iteration = 0, residual norm = 1.000000e+00
    AMRMultiGrid:: iteration = 1, residual norm = 2.462298e-01, rate = 4.061248e+00
    AMRMultiGrid:: iteration = 2, residual norm = 8.359399e-03, rate = 2.945544e+01
    AMRMultiGrid:: iteration = 3, residual norm = 1.360015e-04, rate = 6.146551e+01
    AMRMultiGrid:: iteration = 4, residual norm = 1.123544e-06, rate = 1.210468e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09, rate = 1.193737e+02
    AMRMultiGrid:: iteration = 5, residual norm = 9.411991e-09
    AMRMultiGrid:: exitStatus = 1
AMRMultiGrid::solve: calling revert
AMRMultiGrid::solve: leaving
runSolver: clean up 
peak memory usage: 137543 bytes (0 Mb)
